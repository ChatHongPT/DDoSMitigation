#################### Packetbeat 구성 예제 #########################

# 이 파일은 가장 일반적인 옵션을 강조하는 예제 구성 파일입니다.
# 동일한 디렉토리의 packetbeat.reference.yml 파일에는 더 많은 주석과 함께
# 지원되는 모든 옵션이 포함되어 있습니다. 이를 참고 자료로 사용할 수 있습니다.
#
# 전체 구성 참조는 여기에서 찾을 수 있습니다:
# https://www.elastic.co/guide/en/beats/packetbeat/index.html

# =============================== 네트워크 장치 ===============================

# 데이터를 스니핑할 네트워크 인터페이스를 선택합니다. Linux에서는
# "any" 키워드를 사용하여 연결된 모든 인터페이스에서 스니핑할 수 있습니다.
# 모든 플랫폼에서 "default_route", "default_route_ipv4" 또는 "default_route_ipv6"을 사용하여
# 기본 경로를 운반하는 장치에서 스니핑할 수 있습니다. 여러 네트워크 인터페이스에서
# 스니핑하려면 각 장치의 구성을 개별적으로 지정하여 YAML 배열로 고유한 인터페이스 배열을
# 지정할 수 있습니다. 각 장치는 인터페이스 배열에 한 번만 나타날 수 있습니다.
#
packetbeat.interfaces.type: af_packet
#
# packetbeat.interfaces:
# - device: en0
#   internal_networks:
#   - private
# - device: en1
#   internal_networks:
#   - private
#
packetbeat.interfaces.device: any

# 기본 경로의 변경 사항을 폴링하는 시간 간격을 지정합니다.
# 이 옵션은 기본 경로 장치 중 하나가 지정된 경우에만 사용됩니다.
packetbeat.interfaces.poll_default_route: 1m

# 네트워크 경계 분류의 목적으로 "내부" 네트워크로 간주되는 네트워크 CIDR 블록을 지정합니다.
# internal_networks의 유효한 값은 프로세서 네트워크 조건과 함께 사용할 수 있는 값과 동일합니다.
#
# 사용 가능한 값 목록은 다음을 참조하세요:
# https://www.elastic.co/guide/en/beats/packetbeat/current/defining-processors.html#condition-network
packetbeat.interfaces.internal_networks:
  - private

# =================================== 플로우 ====================================

# 플로우 보고를 비활성화하려면 `enabled: false`로 설정하거나 모든 옵션을 주석 처리합니다.
packetbeat.flows:
  # 네트워크 플로우 타임아웃을 설정합니다. 패킷이 수신되지 않으면 플로우가 타임아웃됩니다.
  timeout: 30s

  # 보고 주기를 구성합니다. -1s로 설정하면 종료된 플로우만 보고됩니다.
  period: 10s

# =========================== 트랜잭션 프로토콜 ============================

packetbeat.protocols:
- type: icmp
  # ICMPv4 및 ICMPv6 모니터링을 활성화합니다. 기본값은 true입니다.
  enabled: true

- type: amqp
  # AMQP 트래픽을 수신할 포트를 구성합니다. 포트 목록을 주석 처리하여
  # AMQP 프로토콜을 비활성화할 수 있습니다.
  ports: [5672]

- type: cassandra
  # Cassandra 트래픽을 수신할 포트를 구성합니다. 포트 목록을 주석 처리하여
  # Cassandra 프로토콜을 비활성화할 수 있습니다.
  ports: [9042]

- type: dhcpv4
  # IPv4 포트에 대한 DHCP를 구성합니다.
  ports: [67, 68]

- type: dns
  # DNS 트래픽을 수신할 포트를 구성합니다. 포트 목록을 주석 처리하여
  # DNS 프로토콜을 비활성화할 수 있습니다.
  ports: [53]

- type: http
  # HTTP 트래픽을 수신할 포트를 구성합니다. 포트 목록을 주석 처리하여
  # HTTP 프로토콜을 비활성화할 수 있습니다.
  ports: [80, 8080, 8000, 5000, 8002]

- type: memcache
  # Memcache 트래픽을 수신할 포트를 구성합니다. 포트 목록을 주석 처리하여
  # Memcache 프로토콜을 비활성화할 수 있습니다.
  ports: [11211]

- type: mysql
  # MySQL 트래픽을 수신할 포트를 구성합니다. 포트 목록을 주석 처리하여
  # MySQL 프로토콜을 비활성화할 수 있습니다.
  ports: [3306, 3307]

- type: pgsql
  # Pgsql 트래픽을 수신할 포트를 구성합니다. 포트 목록을 주석 처리하여
  # Pgsql 프로토콜을 비활성화할 수 있습니다.
  ports: [5432]

- type: redis
  # Redis 트래픽을 수신할 포트를 구성합니다. 포트 목록을 주석 처리하여
  # Redis 프로토콜을 비활성화할 수 있습니다.
  ports: [6379]

- type: thrift
  # Thrift-RPC 트래픽을 수신할 포트를 구성합니다. 포트 목록을 주석 처리하여
  # Thrift-RPC 프로토콜을 비활성화할 수 있습니다.
  ports: [9090]

- type: mongodb
  # MongoDB 트래픽을 수신할 포트를 구성합니다. 포트 목록을 주석 처리하여
  # MongoDB 프로토콜을 비활성화할 수 있습니다.
  ports: [27017]

- type: nfs
  # NFS 트래픽을 수신할 포트를 구성합니다. 포트 목록을 주석 처리하여
  # NFS 프로토콜을 비활성화할 수 있습니다.
  ports: [2049]

- type: tls
  # TLS 트래픽을 수신할 포트를 구성합니다. 포트 목록을 주석 처리하여
  # TLS 프로토콜을 비활성화할 수 있습니다.
  ports:
    - 443   # HTTPS
    - 993   # IMAPS
    - 995   # POP3S
    - 5223  # XMPP over SSL
    - 8443
    - 8883  # Secure MQTT
    - 9243  # Elasticsearch

- type: sip
  # SIP 트래픽을 수신할 포트를 구성합니다. 포트 목록을 주석 처리하여
  # SIP 프로토콜을 비활성화할 수 있습니다.
  ports: [5060]
  # tcp SIP 트래픽을 모니터링하려면 transport_protocol 옵션을 tcp로 설정할 수 있으며,
  # 기본값은 udp입니다.
  #transport_protocol: tcp


# ======================= Elasticsearch 템플릿 설정 =======================

setup.template.settings:
  index.number_of_shards: 1
  #index.codec: best_compression
  #_source.enabled: false

# ================================== 일반 설정 ===================================

# 네트워크 데이터를 게시하는 발송기의 이름입니다. 웹 인터페이스에서 단일 발송기가 보낸 모든 트랜잭션을 그룹화하는 데 사용할 수 있습니다.
#name:

# 모든 이벤트에 포함할 태그 목록입니다. 기본 구성 파일에서 전달된 태그는 Packetbeat가 호스트 필드를 추가하지 않도록 합니다. 네트워크 탭 또는 미러 포트를 모니터링하는 경우 전달된 태그를 추가하십시오.
#tags: [forwarded]

# 출력에 추가 정보를 추가하기 위해 지정할 수 있는 선택적 필드입니다.
#fields:
#  env: staging

# ================================= 대시보드 =================================
# 이 설정은 Kibana 인덱스로 샘플 대시보드를 로드하는 것을 제어합니다. 대시보드 로드는 기본적으로 비활성화되어 있으며, 여기서 옵션을 설정하거나 `setup` 명령을 사용하여 활성화할 수 있습니다.
#setup.dashboards.enabled: false

# 대시보드 아카이브를 다운로드할 URL입니다. 기본적으로 이 URL은 Beat 이름과 버전에 따라 계산된 값을 가집니다. 릴리스된 버전의 경우, 이 URL은 artifacts.elastic.co 웹사이트의 대시보드 아카이브를 가리킵니다.
#setup.dashboards.url:

# =================================== Kibana ===================================

# Beats 버전 6.0.0부터 대시보드는 Kibana API를 통해 로드됩니다. 이를 위해 Kibana 엔드포인트 구성이 필요합니다.
  setup.kibana:
  # Kibana 호스트
  # 스킴 및 포트는 생략할 수 있으며 기본값(http 및 5601)으로 설정됩니다.
  # 추가 경로를 지정하는 경우, 스킴이 필요합니다: http://localhost:5601/path
  # IPv6 주소는 항상 다음과 같이 정의해야 합니다: https://[2001:db8::1]:5601
    host: "localhost:5601"
    username: "elastic"
    password: "qwe123"

  # Kibana 공간 ID
  # 대시보드가 로드될 Kibana 공간의 ID입니다. 기본적으로 Default 공간이 사용됩니다.
  #space.id:

# ================================== 출력 설정 ===================================

# 수집된 데이터를 전송할 때 사용할 출력을 구성합니다.

# ---------------------------- Elasticsearch 출력 ----------------------------
# output.elasticsearch:
#   # 연결할 호스트 배열입니다.
#   hosts: ["localhost:9200"]

#   # 프로토콜 - `http` (기본값) 또는 `https` 중 하나입니다.
#   protocol: "http"

#   # 인증 자격 증명 - API 키 또는 사용자 이름/비밀번호 중 하나입니다.
#   #api_key: "id:api_key"
#   username: "elastic"
#   password: "qwe123"

#   # 이벤트를 프로토콜 파이프라인으로 라우팅할 파이프라인입니다.
#   #pipeline: "packetbeat-%{[agent.version]}-routing"

# ------------------------------ Logstash 출력 -------------------------------
output.logstash:
  # Logstash 호스트
  hosts: ["localhost:5044"]

  # 선택적 SSL. 기본적으로 비활성화되어 있습니다.
  # HTTPS 서버 검증을 위한 루트 인증서 목록입니다.
  #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]

  # SSL 클라이언트 인증서
  #ssl.certificate: "/etc/pki/client/cert.pem"

  # 클라이언트 인증서 키
  #ssl.key: "/etc/pki/client/cert.key"


# ================================= 프로세서 =================================

processors:
  - # 네트워크 탭 또는 미러에서 데이터를 처리할 때 태그에 forwarded를 추가합니다.
    if.contains.tags: forwarded
    then:
      - drop_fields:
          fields: [host]
    else:
      - add_host_metadata: ~
  - add_cloud_metadata: ~
  - add_docker_metadata: ~
  - detect_mime_type:
      field: http.request.body.content
      target: http.request.mime_type
  - detect_mime_type:
      field: http.response.body.content
      target: http.response.mime_type

# ================================== 로깅 ===================================

# 로그 레벨을 설정합니다. 기본 로그 레벨은 info입니다.
# 사용 가능한 로그 레벨: error, warning, info, debug
#logging.level: debug

# 디버그 레벨에서, 일부 구성 요소에 대해서만 선택적으로 로깅을 활성화할 수 있습니다.
# 모든 선택자를 활성화하려면 ["*"]를 사용하세요. 다른 선택자의 예로는 "beat",
# "publisher", "service" 등이 있습니다.
#logging.selectors: ["*"]

# ============================= X-Pack 모니터링 ==============================
# Packetbeat는 내부 메트릭을 중앙의 Elasticsearch 모니터링 클러스터로 내보낼 수 있습니다.
# 이를 위해서는 Elasticsearch에서 xpack 모니터링을 활성화해야 합니다.
# 기본적으로 보고는 비활성화되어 있습니다.

# 모니터링 리포터를 활성화하려면 true로 설정합니다.
#monitoring.enabled: false

# 이 Packetbeat 인스턴스의 모니터링 데이터가 스택 모니터링 UI에서 나타날
# Elasticsearch 클러스터의 UUID를 설정합니다. output.elasticsearch가 활성화되어
# 있는 경우, UUID는 output.elasticsearch에 참조된 Elasticsearch 클러스터에서 파생됩니다.
#monitoring.cluster_uuid:

# 메트릭을 Elasticsearch로 보내려면 주석을 제거하십시오. 대부분의 설정은
# Elasticsearch 출력에서도 허용됩니다. 설정이 Elasticsearch *모니터링* 클러스터를
# 가리키도록 해야 합니다. 설정되지 않은 모든 설정은 Elasticsearch 출력 구성에서
# 자동으로 상속되므로, Elasticsearch 출력이 Elasticsearch 모니터링 클러스터를
# 가리키도록 구성된 경우, 다음 줄의 주석을 제거하기만 하면 됩니다.
#monitoring.elasticsearch:

# ============================== 계측 =================================

# packetbeat에 대한 계측 지원.
#instrumentation:
    # packetbeat의 계측을 활성화하려면 true로 설정합니다.
    #enabled: false

    # packetbeat가 실행 중인 환경 (예: 스테이징, 프로덕션 등)
    #environment: ""

    # 계측 결과를 보고할 APM 서버 호스트.
    #hosts:
    #  - http://localhost:8200

    # APM 서버의 API 키.
    # api_key가 설정되면 secret_token은 무시됩니다.
    #api_key:

    # APM 서버의 비밀 토큰.
    #secret_token:

# ================================= 마이그레이션 =================================

# 6.7 마이그레이션 별칭을 활성화할 수 있습니다.
#migration.6_to_7.enabled: true
